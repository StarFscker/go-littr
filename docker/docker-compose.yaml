version: "3"
services:

  postgres:
    env_file: ./.env
    image: postgres:10-alpine
    volumes:
      - /tmp/postgres:/var/lib/postgresql/data
#    environment:
#      POSTGRES_USER: ${DB_USER}
#      POSTGRES_PASSWORD: ${DB_PASSWORD}
#      POSTGRES_DATABASE: ${DB_NAME}
### Uncomment to enable DB persistence
#    command: postgres -c log_connections=on -c logging_collector=on -c log_destination=stderr -c log_directory=/var/log/postgresql

#  redis:
#    restart: always
#    image: redis:4.0-alpine
### Uncomment to enable REDIS persistence
#    volumes:
#      - ./redis:/data
#  es:
#    restart: always
#    image: docker.elastic.co/elasticsearch/elasticsearch-oss:6.1.3
#    environment:
#      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
#### Uncomment to enable ES persistence
##    volumes:
##      - ./elasticsearch:/usr/share/elasticsearch/data

  proxy:
    env_file: ./.env
    build:
      context: varnish
      dockerfile: ./Dockerfile
      args:
        LISTEN: ${LISTEN}
        HOSTNAME: ${HOSTNAME}
    ports:
      - 80:80
      - 6086:6086
    environment:
      - VARNISH_BACKEND_ADDRESS=application
      - VARNISH_BACKEND_PORT=${LISTEN}

  ssl:
    env_file: ./.env
    build:
      context: hitch
      dockerfile: ./Dockerfile
      args:
        LISTEN: ${LISTEN}
        HOSTNAME: ${HtOSTNAME}
    ports:
      - 443:443
    environment:
      - HITCH_BACKEND_ADDRESS=proxy
      - HITCH_BACKEND_PORT=6086

  bootstrap:
    env_file: ./.env
    image: bootstrap:${ENV}
    depends_on:
      - postgres
    build:
      context: bootstrap
      dockerfile: ./Dockerfile
      args:
          DB_HOST: ${DB_HOST}
          DB_NAME: ${DB_NAME}
          DB_USER: ${DB_USER}
          DB_PASSWORD: ${DB_PASSWORD}

  application:
    env_file: ./.env
    image: web_app:${ENV}
    depends_on:
      - postgres
      - bootstrap
      - proxy
#      - ssl
#      - redis
    build:
      context: app
      dockerfile: ./Dockerfile
      args:
          ENV: ${ENV}
          LISTEN: ${LISTEN}
          HOSTNAME: ${HOSTNAME}
